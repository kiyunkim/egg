$(window).focus(function() {
    gameInstance.focused = true;
});
$(window).blur(function() {
    gameInstance.focused = false;
    var estimatedMonies = gameInstance.monies;
    var estimate = window.setInterval(function() {
    estimatedMonies+= gameInstance.moneyRatePerSecond;
    document.title = ""+Math.round(estimatedMonies);

    if(gameInstance.focused)
       window.clearInterval(estimate);

    }, 1000);
});   


http://dhmholley.co.uk/incrementals-part-2.html
https://startbootstrap.com/
https://www.reddit.com/r/incremental_games/wiki/build_a_game



There's really nothing original here, but I'll give you some coding tips.
For a save system, you need to save all the variables under an object like this

var game = {
    kills: 0,
    swords: 0,
    magic: 0 //etc
}

and then to save you do

localStorage.setItem('saveName', game)

and to load you do

var save = localstorage.getItem('saveName')
if (save) game = save

Also you shouldn't have multiple intervals, currently you have a mistake in the code which causes stuff being gained more (because of multiple intervals). In the end of the JS you declare "if (prestige = 1)" which should be "if (prestige == 1)"
To fix the thing with holding enter you can change the element from a button to a div. You need to style it however to look like a button with CSS.
Also to add as a bonus, an easy way to add off-tab and even online production is to record the last update with Date.now(), and when adding resources use the last update time to see how long it has been since the last update, and add resources using that.
Like this

var lastUpdate = Date.now()
setInterval(function() {
    let currentUpdate = Date.now()
    let delta = (currentUpdate - lastUpdate) / 1000 //divided by 1000 because Date.now() is in milliseconds
    currency += resourcesGainedPerSecond * delta

   lastUpdate = currentUpdate
}, 100);